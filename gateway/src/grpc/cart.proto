syntax = "proto3";

package cart;

// Enum matching your CartItemActionType
enum CartItemActionType {
  SUCCESS = 0;
  CREATED = 1;
  UPDATED = 2;
  DELETED = 3;
  NOT_FOUND = 4;
}

// Request messages for each RPC.
message GetCartItemsRequest {
  string userId = 1;
}

message AddCartItemRequest {
  string userId = 1;
  int32 productId = 2;
}

message UpdateCartItemRequest {
  string userId = 1;
  int32 cartItemId = 2;
  int32 quantity = 3;
}

message RemoveCartItemRequest {
  string userId = 1;
  int32 cartItemId = 2;
}

message GetCartTotalRequest {
  string userId = 1;
}

message Product {
  int32 id = 1;
  string name = 2;
  double price = 3;
  string category = 4;
  string description = 5;
  string image = 6;
}

message CartItem {
  int32 id = 1;
  int32 quantity = 2;
  Product product = 3;
}

message CheckoutCartRequest {
  string userId = 1;
  int32 cartId = 2;
  string name = 3;
  string email = 4;
  string streetAddress = 5;
  string streetAddressTwo = 6;
  string city = 7;
  string planet = 8;
  string postalCode = 9;
  string phone = 10;
}

message GetCartItemsResponse {
  CartItemActionType type = 1;
  string message = 2;
  repeated CartItem data = 3;
}

message AddCartItemResponse {
  CartItemActionType type = 1;
  string message = 2;
  CartItem data = 3;
}

message UpdateCartItemResponse {
  CartItemActionType type = 1;
  string message = 2;
}

message RemoveCartItemResponse {
  CartItemActionType type = 1;
  string message = 2;
}

message GetCartTotalResponse {
  CartItemActionType type = 1;
  string message = 2;
  double data = 3;
}

message CheckoutCartResponse {
  CartItemActionType type = 1;
  string message = 2;
}


service CartService {
  rpc GetCartItems(GetCartItemsRequest) returns (GetCartItemsResponse);
  rpc AddCartItem(AddCartItemRequest) returns (AddCartItemResponse);
  rpc UpdateCartItem(UpdateCartItemRequest) returns (UpdateCartItemResponse);
  rpc RemoveCartItem(RemoveCartItemRequest) returns (RemoveCartItemResponse);
  rpc GetCartTotal(GetCartTotalRequest) returns (GetCartTotalResponse);
  rpc CheckoutCart(CheckoutCartRequest) returns (CheckoutCartResponse);
}
